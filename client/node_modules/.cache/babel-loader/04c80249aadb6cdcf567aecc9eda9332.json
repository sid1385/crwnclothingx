{"ast":null,"code":"var _jsxFileName = \"/home/siddhesh/React/crwn-clothing/crwn-clothing/src/pages/ShopPage/ShopPage.jsx\";\nimport React from \"react\";\nimport CollectionOverview from \"../../components/CollectionsOverview/CollectionOverview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../CollectionPage/CollectionPage\";\nimport { firestore, convertCollectionsArrayToObject } from \"../../FireBase/firebase.config\";\nimport { connect } from \"react-redux\";\nimport { updateShopItems } from \"../../redux/shop/shop-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collect = convertCollectionsArrayToObject(snapshot);\n      console.log(collect);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:categoryid`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  updateCollectionsMap: collections => dispatch(updateShopItems(collections));\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/src/pages/ShopPage/ShopPage.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","firestore","convertCollectionsArrayToObject","connect","updateShopItems","ShopPage","Component","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collect","console","log","render","match","props","path","mapDispatchToProps","dispatch","updateCollectionsMap","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,gCAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,+BAAhC;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,OAAO,GAAGV,+BAA+B,CAACS,QAAD,CAA/C;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAHD;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEpB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEkB,KAAK,CAACE,IAAK,cAFtB;AAGE,QAAA,SAAS,EAAElB;AAHb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AArBoC;;AAwBvC,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACvCC,EAAAA,oBAAoB,EAAGC,WAAD,IAAiBF,QAAQ,CAAChB,eAAe,CAACkB,WAAD,CAAhB,CAAzB;AACvB,CAFD;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionOverview from \"../../components/CollectionsOverview/CollectionOverview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../CollectionPage/CollectionPage\";\nimport {\n  firestore,\n  convertCollectionsArrayToObject,\n} from \"../../FireBase/firebase.config\";\nimport { connect } from \"react-redux\";\nimport { updateShopItems } from \"../../redux/shop/shop-actions\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collect = convertCollectionsArrayToObject(snapshot);\n      console.log(collect);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route\n          exact\n          path={`${match.path}/:categoryid`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  updateCollectionsMap: (collections) => dispatch(updateShopItems(collections));\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}