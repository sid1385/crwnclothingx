{"ast":null,"code":"import { takeEvery, call, put, take, takeLatest, delay } from \"redux-saga/effects\";\nimport { shopItemFetchCompleted, shopItemFetchError } from \"./shop-actions\";\nimport { firestore, convertCollectionsArrayToObject } from \"../../FireBase/firebase.config\";\nexport function* fetchCollectionsFromFirebaseAsync() {\n  try {\n    const collectionref = yield firestore.collection(\"collections\");\n    const snapshot = yield collectionref.get();\n    const collectionMap = yield call(convertCollectionsArrayToObject, snapshot);\n    yield put(shopItemFetchCompleted(collectionMap));\n  } catch (error) {\n    yield put(shopItemFetchError(error.message));\n  } //   return (dispatch) => {\n  //     const collectionref = firestore.collection(\"collections\");\n  //     dispatch(shopItemFetchStart());\n  //     collectionref\n  //       .get()\n  //       .then((snapshot) => {\n  //         const collectionsMap = convertCollectionsArrayToObject(snapshot);\n  //         dispatch(shopItemFetchCompleted(collectionsMap));\n  //       })\n  //       .catch((error) => {\n  //         dispatch(shopItemFetchError(error.message));\n  //       });\n  //   };\n\n}\nexport function* collectionFetchStart() {\n  yield takeLatest(\"SHOP_ITEM_FETCH_START\", fetchCollectionsFromFirebaseAsync);\n}","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/client/src/redux/shop/shop-saga.js"],"names":["takeEvery","call","put","take","takeLatest","delay","shopItemFetchCompleted","shopItemFetchError","firestore","convertCollectionsArrayToObject","fetchCollectionsFromFirebaseAsync","collectionref","collection","snapshot","get","collectionMap","error","message","collectionFetchStart"],"mappings":"AAAA,SACEA,SADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,KANF,QAOO,oBAPP;AAQA,SAASC,sBAAT,EAAiCC,kBAAjC,QAA2D,gBAA3D;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,gCAHP;AAKA,OAAO,UAAUC,iCAAV,GAA8C;AACnD,MAAI;AACF,UAAMC,aAAa,GAAG,MAAMH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACQ,+BAAD,EAAkCI,QAAlC,CAAhC;AACA,UAAMX,GAAG,CAACI,sBAAsB,CAACS,aAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,kBAAkB,CAACS,KAAK,CAACC,OAAP,CAAnB,CAAT;AACD,GARkD,CAUnD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMd,UAAU,CAAC,uBAAD,EAA0BM,iCAA1B,CAAhB;AACD","sourcesContent":["import {\n  takeEvery,\n  call,\n  put,\n  take,\n  takeLatest,\n  delay,\n} from \"redux-saga/effects\";\nimport { shopItemFetchCompleted, shopItemFetchError } from \"./shop-actions\";\nimport {\n  firestore,\n  convertCollectionsArrayToObject,\n} from \"../../FireBase/firebase.config\";\n\nexport function* fetchCollectionsFromFirebaseAsync() {\n  try {\n    const collectionref = yield firestore.collection(\"collections\");\n    const snapshot = yield collectionref.get();\n    const collectionMap = yield call(convertCollectionsArrayToObject, snapshot);\n    yield put(shopItemFetchCompleted(collectionMap));\n  } catch (error) {\n    yield put(shopItemFetchError(error.message));\n  }\n\n  //   return (dispatch) => {\n  //     const collectionref = firestore.collection(\"collections\");\n  //     dispatch(shopItemFetchStart());\n  //     collectionref\n  //       .get()\n  //       .then((snapshot) => {\n  //         const collectionsMap = convertCollectionsArrayToObject(snapshot);\n\n  //         dispatch(shopItemFetchCompleted(collectionsMap));\n  //       })\n  //       .catch((error) => {\n  //         dispatch(shopItemFetchError(error.message));\n  //       });\n  //   };\n}\n\nexport function* collectionFetchStart() {\n  yield takeLatest(\"SHOP_ITEM_FETCH_START\", fetchCollectionsFromFirebaseAsync);\n}\n"]},"metadata":{},"sourceType":"module"}