{"ast":null,"code":"var _jsxFileName = \"/home/siddhesh/React/crwn-clothing/crwn-clothing/src/components/SignIn/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../../components/FormInput/FormInput\";\nimport CustomButton from \"./../customButton/customButton\";\nimport \"./SignIn.scss\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password); // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    // } catch (error) {\n    //   console.log(error.message);\n    // }\n\n    setCredentials({\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  handleChange = data => {\n    const {\n      value,\n      name\n    } = data.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email id and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: googleSignInStart,\n          isgooglesignin: true,\n          type: \"button\",\n          children: \"SIGN IN WITH GOOGLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"jZElPHxWAnlV/uyZ8he+OfXfzPM=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/src/components/SignIn/SignIn.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","data","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../../components/FormInput/FormInput\";\nimport CustomButton from \"./../customButton/customButton\";\nimport \"./SignIn.scss\";\n\nimport { connect } from \"react-redux\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user-actions\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n\n    // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    // } catch (error) {\n    //   console.log(error.message);\n    // }\n    setCredentials({ email: \"\", password: \"\" });\n  };\n\n  handleChange = (data) => {\n    const { value, name } = data.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have an account</h2>\n      <span>Sign in with your email id and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"email\"\n          required\n        />\n\n        <FormInput\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <div className=\"button\">\n          <CustomButton type=\"submit\" children=\"SIGN IN\" />\n          <CustomButton\n            onClick={googleSignInStart}\n            isgooglesignin\n            type=\"button\"\n            children=\"SIGN IN WITH GOOGLE\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}