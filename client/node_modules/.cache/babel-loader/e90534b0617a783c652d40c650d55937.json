{"ast":null,"code":"var _jsxFileName = \"/home/siddhesh/React/crwn-clothing/crwn-clothing/src/components/SignUp/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButton from \"../customButton/customButton\";\nimport \"./SignUp.scss\";\nimport { connect } from \"react-redux\";\nimport { emailSignUpStart } from \"../../redux/user/user-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  emailSignUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n\n  const handleChange = data => {\n    const {\n      value,\n      name\n    } = data.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmpassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmpassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    emailSignUpStart({\n      email,\n      password,\n      displayName\n    }); // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n    //   //Investigate why it is dome like this\n    //   await createUserProfileDocument(user, { displayName });\n    //   this.setState({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmpassword: \"\",\n    //   });\n    // } catch (error) {\n    //   console.log(error.message);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign Up with Email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        id: \"displayName\",\n        name: \"displayName\",\n        value: displayName,\n        label: \"displayName\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        id: \"confirmpassword\",\n        name: \"confirmpassword\",\n        value: confirmpassword,\n        onChange: handleChange,\n        label: \"confirmpassword\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"pvMiztrVdZEFjBlVunMN8WgHaTE=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  emailSignUpStart: emailpw => dispatch(emailSignUpStart(emailpw))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/src/components/SignUp/SignUp.jsx"],"names":["React","useState","FormInput","CustomButton","connect","emailSignUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmpassword","handleChange","data","value","name","target","handleSubmit","event","preventDefault","alert","mapDispatchToProps","dispatch","emailpw"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButton from \"../customButton/customButton\";\nimport \"./SignUp.scss\";\n\nimport { connect } from \"react-redux\";\nimport { emailSignUpStart } from \"../../redux/user/user-actions\";\n\nconst SignUp = ({ emailSignUpStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n  });\n\n  const handleChange = (data) => {\n    const { value, name } = data.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  const { displayName, email, password, confirmpassword } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmpassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    emailSignUpStart({ email, password, displayName });\n\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n    //   //Investigate why it is dome like this\n    //   await createUserProfileDocument(user, { displayName });\n    //   this.setState({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmpassword: \"\",\n    //   });\n    // } catch (error) {\n    //   console.log(error.message);\n    // }\n  };\n\n  return (\n    <div className=\"signUp\">\n      <h2>I do not have a account</h2>\n      <span>Sign Up with Email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          id=\"displayName\"\n          name=\"displayName\"\n          value={displayName}\n          label=\"displayName\"\n          onChange={handleChange}\n          required\n        />\n        <FormInput\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          id=\"confirmpassword\"\n          name=\"confirmpassword\"\n          value={confirmpassword}\n          onChange={handleChange}\n          label=\"confirmpassword\"\n          required\n        />\n        <CustomButton type=\"submit\" children=\"SIGN UP\" />\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  emailSignUpStart: (emailpw) => dispatch(emailSignUpStart(emailpw)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}