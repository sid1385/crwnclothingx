{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDMxOArZ74gY2aC7M_7VfYKwPQxgTCXAQw\",\n  authDomain: \"crwn-clothing-255b1.firebaseapp.com\",\n  projectId: \"crwn-clothing-255b1\",\n  storageBucket: \"crwn-clothing-255b1.appspot.com\",\n  messagingSenderId: \"800340993710\",\n  appId: \"1:800340993710:web:f1b01d9ae393b4083faf3f\",\n  measurementId: \"G-9HXZP8PCV1\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signinwithgoogle = () => auth.signInWithPopup(provider);\nexport const createUserProfileDocument = async (userauth, additionaldata) => {\n  if (!userauth) return;\n  const userref = firestore.doc(`users/${userauth.uid}`);\n  const snapshot = await userref.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userauth;\n    const createdAt = new Date();\n\n    try {\n      userref.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionaldata\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userref;\n};\nexport const addCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/src/FireBase/firebase.config.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signinwithgoogle","signInWithPopup","createUserProfileDocument","userauth","additionaldata","userref","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,qCAFO;AAGnBC,EAAAA,SAAS,EAAE,qBAHQ;AAInBC,EAAAA,aAAa,EAAE,iCAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAArB;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,SAAS,GAAGV,QAAQ,CAACU,SAAT,EAAlB;AACP,OAAO,MAAMC,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AAEP,IAAIC,QAAQ,GAAG,IAAIZ,QAAQ,CAACW,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGX,SAAS,CAACY,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACFT,MAAAA,OAAO,CAACU,GAAR,CAAY;AACVJ,QAAAA,WADU;AAEVC,QAAAA,KAFU;AAGVC,QAAAA,SAHU;AAIV,WAAGT;AAJO,OAAZ;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF;;AAED,SAAOd,OAAP;AACD,CAtBM;AAwBP,OAAO,MAAMe,0BAA0B,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACzE,QAAMC,aAAa,GAAG7B,SAAS,CAAC8B,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACD,CAHM","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDMxOArZ74gY2aC7M_7VfYKwPQxgTCXAQw\",\n  authDomain: \"crwn-clothing-255b1.firebaseapp.com\",\n  projectId: \"crwn-clothing-255b1\",\n  storageBucket: \"crwn-clothing-255b1.appspot.com\",\n  messagingSenderId: \"800340993710\",\n  appId: \"1:800340993710:web:f1b01d9ae393b4083faf3f\",\n  measurementId: \"G-9HXZP8PCV1\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signinwithgoogle = () => auth.signInWithPopup(provider);\n\nexport const createUserProfileDocument = async (userauth, additionaldata) => {\n  if (!userauth) return;\n  const userref = firestore.doc(`users/${userauth.uid}`);\n  const snapshot = await userref.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userauth;\n    const createdAt = new Date();\n\n    try {\n      userref.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionaldata,\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userref;\n};\n\nexport const addCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\n"]},"metadata":{},"sourceType":"module"}