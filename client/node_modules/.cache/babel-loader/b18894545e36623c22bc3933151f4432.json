{"ast":null,"code":"var _jsxFileName = \"/home/siddhesh/React/crwn-clothing/crwn-clothing/src/pages/ShopPage/ShopPage.jsx\";\nimport React from \"react\";\nimport CollectionOverview from \"../../components/CollectionsOverview/CollectionOverview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../CollectionPage/CollectionPage\";\nimport { firestore, convertCollectionsArrayToObject } from \"../../FireBase/firebase.config\";\nimport { connect } from \"react-redux\";\nimport { updateShopItems } from \"../../redux/shop/shop-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribe = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollectionsMap\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribe = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsArrayToObject(snapshot);\n      console.log(collectionsMap, \"hello\"); //updateCollectionsMap(collectionsMap);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:categoryid`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollectionsMap: collectionsMap => dispatch(updateShopItems(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/src/pages/ShopPage/ShopPage.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","firestore","convertCollectionsArrayToObject","connect","updateShopItems","ShopPage","Component","unsubscribe","componentDidMount","updateCollectionsMap","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,gCAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,+BAAhC;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,WADqC,GACvB,IADuB;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAA2B,KAAKC,KAAtC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKL,WAAL,GAAmBI,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC9D,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ,EAA4B,OAA5B,EAF8D,CAG9D;AACD,KAJkB,CAAnB;AAKD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,WAAL;AACD;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEvB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEsB,KAAK,CAACC,IAAK,cAFtB;AAGE,QAAA,SAAS,EAAErB;AAHb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA3BoC;;AA8BvC,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,oBAAoB,EAAGM,cAAD,IACpBQ,QAAQ,CAACnB,eAAe,CAACW,cAAD,CAAhB;AAF8B,CAAf,CAA3B;;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionOverview from \"../../components/CollectionsOverview/CollectionOverview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../CollectionPage/CollectionPage\";\nimport {\n  firestore,\n  convertCollectionsArrayToObject,\n} from \"../../FireBase/firebase.config\";\nimport { connect } from \"react-redux\";\nimport { updateShopItems } from \"../../redux/shop/shop-actions\";\n\nclass ShopPage extends React.Component {\n  unsubscribe = null;\n  componentDidMount() {\n    const { updateCollectionsMap } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribe = collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsArrayToObject(snapshot);\n      console.log(collectionsMap, \"hello\");\n      //updateCollectionsMap(collectionsMap);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route\n          exact\n          path={`${match.path}/:categoryid`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollectionsMap: (collectionsMap) =>\n    dispatch(updateShopItems(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}