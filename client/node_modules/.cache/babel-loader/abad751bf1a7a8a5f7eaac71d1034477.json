{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { collectionFetchStart } from \"../redux/shop/shop-saga\";\nimport logger from \"redux-logger\";\nimport rootSaga from \"./root-saga\";\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nexport const persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","thunk","createSagaMiddleware","collectionFetchStart","logger","rootSaga","rootReducer","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,UAAU,GAAG,CAACD,cAAD,CAAnB;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,CAACI,IAAX,CAAgBR,MAAhB;AACD;;AAED,OAAO,MAAMS,KAAK,GAAGf,WAAW,CAACQ,WAAD,EAAcP,eAAe,CAAC,GAAGS,UAAJ,CAA7B,CAAzB;AACP,OAAO,MAAMM,SAAS,GAAGd,YAAY,CAACa,KAAD,CAA9B;AAEPN,cAAc,CAACQ,GAAf,CAAmBV,QAAnB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { collectionFetchStart } from \"../redux/shop/shop-saga\";\nimport logger from \"redux-logger\";\nimport rootSaga from \"./root-saga\";\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n"]},"metadata":{},"sourceType":"module"}