{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDMxOArZ74gY2aC7M_7VfYKwPQxgTCXAQw\",\n  authDomain: \"crwn-clothing-255b1.firebaseapp.com\",\n  projectId: \"crwn-clothing-255b1\",\n  storageBucket: \"crwn-clothing-255b1.appspot.com\",\n  messagingSenderId: \"800340993710\",\n  appId: \"1:800340993710:web:f1b01d9ae393b4083faf3f\",\n  measurementId: \"G-9HXZP8PCV1\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\nexport var provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signinwithgoogle = () => auth.signInWithPopup(provider);\nexport const createUserProfileDocument = async (userauth, additionaldata) => {\n  if (!userauth) return;\n  const userref = firestore.doc(`users/${userauth.uid}`);\n  const snapshot = await userref.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userauth;\n    const createdAt = new Date();\n\n    try {\n      userref.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionaldata\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userref;\n};\nexport const checkUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribefromauth = auth.onAuthStateChanged(userAuth => {\n      unsubscribefromauth();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const convertCollectionsArrayToObject = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};","map":{"version":3,"sources":["/home/siddhesh/React/crwn-clothing/crwn-clothing/client/src/FireBase/firebase.config.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signinwithgoogle","signInWithPopup","createUserProfileDocument","userauth","additionaldata","userref","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","checkUser","Promise","resolve","reject","unsubscribefromauth","onAuthStateChanged","userAuth","convertCollectionsArrayToObject","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDMxOArZ74gY2aC7M_7VfYKwPQxgTCXAQw\",\n  authDomain: \"crwn-clothing-255b1.firebaseapp.com\",\n  projectId: \"crwn-clothing-255b1\",\n  storageBucket: \"crwn-clothing-255b1.appspot.com\",\n  messagingSenderId: \"800340993710\",\n  appId: \"1:800340993710:web:f1b01d9ae393b4083faf3f\",\n  measurementId: \"G-9HXZP8PCV1\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\n\nexport var provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signinwithgoogle = () => auth.signInWithPopup(provider);\n\nexport const createUserProfileDocument = async (userauth, additionaldata) => {\n  if (!userauth) return;\n  const userref = firestore.doc(`users/${userauth.uid}`);\n  const snapshot = await userref.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userauth;\n    const createdAt = new Date();\n\n    try {\n      userref.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionaldata,\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userref;\n};\n\nexport const checkUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribefromauth = auth.onAuthStateChanged((userAuth) => {\n      unsubscribefromauth();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const convertCollectionsArrayToObject = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items,\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const addCollectionsAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n"]},"metadata":{},"sourceType":"module"}